{
  "active": true,
  "connections": {
    "Config": {
      "main": [
        [
          {
            "node": "Get data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "N8N_interne",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "N8N_interne": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get data": {
      "main": [
        [
          {
            "node": "Check if file exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if file exists": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-09T06:29:50.799Z",
  "id": "qnjSWRqZcmfeZNkp",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CanigouIA.Backup.Workflow.n8n.POC",
  "nodes": [
    {
      "parameters": {},
      "id": "2e41b5ee-1e90-40c4-a4b6-1eadee50fc39",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        400,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 712,
        "width": 1911,
        "color": 6
      },
      "id": "b062ed21-0f14-4027-b487-04df65a26b77",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9df694ff-78b0-44fb-bb4c-986a9f20b8d2",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -20,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "02524249-33f9-4028-bd1d-0de21dc1b0c9",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1640,
        900
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "9815fe31-fa4d-4904-9f56-6589fac32198",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        600,
        780
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "b61a46b7-bb85-4b2d-ba02-3c0f84bf754e",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        360,
        1060
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "999ae6ce-1e79-441b-a33b-ec625f2a5e28",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        560,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "310f2ade-3fac-4d05-816e-4b0d28bcc050",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        960,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "dc855398-839d-4fc8-8a9f-31ec233c5782",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1180,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "1d62a4c5-5733-4f87-8aa7-6bea133aeb90",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1180,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e1c5e092-8846-4810-b246-9082517d1569",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1180,
        1260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $json.subPath }}{{ $('Execute Workflow Trigger').first().json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})",
        "additionalParameters": {
          "branch": {
            "branch": "workflows"
          }
        }
      },
      "id": "b892f622-e574-4898-8e78-b9a66be39b75",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1400,
        1260
      ],
      "typeVersion": 1,
      "webhookId": "5deeda59-5643-4ab7-b215-4fe55747de9f",
      "credentials": {
        "githubOAuth2Api": {
          "id": "SbRpxvDLyXIoq75t",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $json.subPath }}{{ $('Execute Workflow Trigger').first().json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})",
        "additionalParameters": {
          "branch": {
            "branch": "workflows"
          }
        }
      },
      "id": "06dfbab4-c36e-4015-9d4b-f8b98b79c6c9",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1400,
        1060
      ],
      "typeVersion": 1,
      "webhookId": "fb02f661-ea61-45e6-968c-970ff6994397",
      "credentials": {
        "githubOAuth2Api": {
          "id": "SbRpxvDLyXIoq75t",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bbed9b4a-caa9-43ac-b0d4-3f35d06569d7",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1200,
        420
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 3,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "7ea2b244-bb9e-4ef5-9015-d92ff2b193a2",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        400,
        520
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "794f7539-db73-4672-9013-30204ff35366",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        760,
        1060
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "20e4df4d-7dda-475a-a10a-3c123d587967",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "cf27f279-c67b-4f87-8789-172a35118e7e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        360,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=:information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "5c27e742-1ea0-40ff-8227-141ecfa73789",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        640,
        420
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "CkPd9FlkopJskvKA",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "3f41b0c0-f10a-4a39-b08e-238d1ef55db7",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1420,
        440
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=✅ Backup has completed - {{ $('N8N_interne').all().length }} workflows have been processed.",
        "otherOptions": {
          "includeLinkToWorkflow": true
        }
      },
      "id": "44ccca5c-af7f-4242-a097-589bcb27243e",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        1420,
        260
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "CkPd9FlkopJskvKA",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "fe5fcb3e-7968-4859-82c6-7a2561e8e439",
      "name": "Failed Flows",
      "type": "n8n-nodes-base.slack",
      "position": [
        1620,
        460
      ],
      "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "CkPd9FlkopJskvKA",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=terryble66"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=CanigouIA"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('T')[0].split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('T')[0].split('-')[1] }}/{{ $('Execute Workflow Trigger').first().json.id }}.json"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "1d7d4db7-2bed-4361-95c6-e8f55cbb76dc",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        160,
        1080
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1000,
        420
      ],
      "id": "32dff866-e590-463c-96ee-632059ee4cbe",
      "name": "Split Out"
    },
    {
      "parameters": {
        "url": "https://n8n.catafs.eu/api/v1/workflows",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "active",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "X-N8N-API-KEY",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyNDE3YWRmOC0wNTNhLTQwNzctOTA0Mi0wYjY3NTFiNjJhNDYiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzQ3MDc4OTY5fQ.ljVPP3-RK05Pc6JuiWtbAHJXj8DXasSg1VwekLktl3E"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        420
      ],
      "id": "798f12c1-6b8d-4e69-9bdc-796639f14e3c",
      "name": "N8N_interne"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $json.repo_owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $json.repo_name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('T')[0].split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('T')[0].split('-')[1] }}/{{ $('Execute Workflow Trigger').first().json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {
          "reference": "workflows"
        }
      },
      "id": "086ec519-a6a3-4693-90d6-0f0a8a65980a",
      "name": "Get data",
      "type": "n8n-nodes-base.github",
      "position": [
        160,
        800
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "5c6505cc-7524-4c24-94ad-4061ffe153f1",
      "credentials": {
        "githubOAuth2Api": {
          "id": "SbRpxvDLyXIoq75t",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b0db4f73-14b7-4359-9b4a-279679739da7",
      "name": "Check if file exists",
      "type": "n8n-nodes-base.if",
      "position": [
        360,
        800
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "repo_name": "CanigouIA",
  "repo_owner": "terryble66",
  "repo_path": "2025/05/qnjSWRqZcmfeZNkp.json",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-05-13T00:01:07.310Z",
  "versionId": "d2039c99-2553-49d5-b2c8-1b5c0a5d00c3"
}